pipeline {
    agent any

    parameters{
        choice(name: 'action', choices: 'apply\ndelete', description: 'apply and delete the application files on EKS cluster')
        string(name: 'cluster', defaultValue: 'counter-cluster', description: 'choose EKS cluster name')
        string(name: 'region', defaultValue: 'us-east-1', description: 'choose AWS region')
    }

    environment{
        ACCESS_KEY = credentials('AWS_ACCESS_KEY_ID')
        SECRET_KEY = credentials('AWS_SECRET_KEY_ID')
    }

    stages {
        stage('Checkout'){
            steps{
                script{
                    checkout scmGit(branches: [[name: '*/dev']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/marcmael1/demo-counter-app.git']])
                }
            }
        }

        stage('Connect To Cluster'){
            steps{
                script{
                    sh ("""
                    aws configure set aws_access_key_id "$ACCESS_KEY"
                    aws configure set aws_secret_access_key "$SECRET_KEY"
                    aws configure set region "${params.region}"
                    aws eks --region ${params.region} update-kubeconfig --name ${params.cluster}
                    """)
                }
            }
        }

        stage('Deployment on eks cluster'){

            when{expression {params.action == 'apply'}}
            steps{
                script{

                    def apply = false

                    try{
                        input message: 'Please confirme apply to initiate the deployment', ok: 'Ready to apply the config?'
                        apply = true
                    }catch(err){
                        apply = false
                        currentBuild.result = 'UNSTABLE'
                    }
                    if(apply){
                        sh """
                            kubectl apply -f /CICD/demo-counter-app/deployment.yml
                            kubectl apply -f /CICD/demo-counter-app/service.yml
                        """
                    }
                }
            }
        }
    }
}